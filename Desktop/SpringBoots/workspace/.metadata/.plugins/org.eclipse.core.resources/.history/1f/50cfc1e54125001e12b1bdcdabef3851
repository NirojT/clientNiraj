package Kanchanjunga.Controller;

import java.util.HashMap;
import java.util.Map;
import java.util.UUID;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.multipart.MultipartFile;

import Kanchanjunga.Dto.DrinkMenuDto;
import Kanchanjunga.Services.DrinkMenuService;

@RestController
@RequestMapping("/api/drinks/menu/")
public class DrinkMenuController {

	@Autowired
	private DrinkMenuService drinkMenuService;

	@PostMapping("create")
	public ResponseEntity<?> createDrinksMenu(@ModelAttribute DrinkMenuDto request) {
		Boolean isSaved = drinkMenuService.createMenuDrinks(request);
		HashMap<String, Object> response = new HashMap<>();
		if (isSaved) {
			response.put("status", 200);
			response.put("message", "drinks added successfully");
			return ResponseEntity.status(200).body(response);
		}
		response.put("status", 400);
		response.put("message", "drinks not added");
		return ResponseEntity.status(200).body(response);
	}

	@PostMapping("update/{id}")
    public ResponseEntity<?> updateDrinksMenu(
    		@PathVariable UUID id,
    		@RequestParam String name,
    		@RequestParam String price,
    		@RequestParam String category,
    		@RequestParam String description,
    		@RequestParam(required = false) MultipartFile image,
    		@RequestParam(required = false) String imageName
    		
    	) {
    Boolean updateMenuDrinks = this.drinkMenuService.updateMenuDrinks(id, name, price, category, description, image, imageName);
	Map<String, Object>	response=new HashMap <>() ;
	
    if (updateMenuDrinks) {
			response.put("status", 200);
			response.put("message", "drinkMenu updated successfully");
			return ResponseEntity.status(200).body(response);
		}
    response.put("status", 400);
	response.put("message", "drinkMenu updatation failed");
	return ResponseEntity.status(200).body(response);
    
}
}
